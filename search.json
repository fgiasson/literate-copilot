[
  {
    "objectID": "main.html",
    "href": "main.html",
    "title": "Main",
    "section": "",
    "text": "The purpose of this application is to show how Literate Programming’s workflow can be used to move effectively develop a software application by leveraging LLMs and more precisely GitHub’s Copilot.\nFor this demonstration, we will develop a command line application in Python that will implement a simple calculator with the following operations:\n\nAddition\nSubtraction\nMultiplication\nDivision\nExponentiation\nSquare root\nLogarithm\nFactorial\nModulo\nAbsolute value\nSine\nCosine\nTangent\nArcsine\nArccosine\nArctangent\nHyperbolic sine\nHyperbolic cosine\nHyperbolic tangent\nInverse hyperbolic sine\nInverse hyperbolic cosine\nInverse hyperbolic tangent\nGreatest common divisor\n\nThe first step to create the command line application is to import the core libraries it requires, namely Typer and NumPy.\nThe next step is to create the Typer application and the main function that will be called when the application is run.\nThe first command we want to implement a command line command that gives the current version of the calculator tool. This command will be called version and will be implemented as follows:\n\n\nversion\n\n version ()\n\nShow version\nThe next step is to implement the first mathematical operation, namely addition. This operation will be implemented as follows:\n\n\n\nadd\n\n add (a:int=1, b:int=2)\n\nAdd two numbers\nThe next step is to implement the second mathematical operation, namely subtraction. This operation will be implemented as follows:\n\n\n\nsubtract\n\n subtract (a:int=1, b:int=2)\n\nSubtract two numbers\nThe next step is to implement the third mathematical operation, namely multiplication. This operation will be implemented as follows:\n\n\n\nmultiply\n\n multiply (a:int=1, b:int=2)\n\nMultiply two numbers\nThe next step is to implement the fourth mathematical operation, namely division. This operation will be implemented as follows:\n\n\n\ndivide\n\n divide (a:int=1, b:int=2)\n\nDivide two numbers\nThe next step is to implement the fifth mathematical operation, namely exponentiation. This operation will be implemented as follows:\n\n\n\npower\n\n power (a:int=1, b:int=2)\n\nRaise a number to the power of another\nThe next step is to implement the sixth mathematical operation, namely square root. This operation will be implemented as follows:\n\n\n\nroot\n\n root (a:int=1, b:int=2)\n\nRoot a number by another\nThe next step is to implement the seventh mathematical operation, namely logarithm. This operation will be implemented as follows:\n\n\n\nlog\n\n log (a:int=1, b:int=2)\n\nLog a number by another\nThe next step is to implement the eighth mathematical operation, namely factorial. This operation will be implemented as follows:\n\n\n\nfactorial\n\n factorial (a:int=1)\n\nFactorial of a number\nThe next step is to implement the ninth mathematical operation, namely modulo. This operation will be implemented as follows:\n\n\n\nmod\n\n mod (a:int=1, b:int=2)\n\nModulus of a number by another\nThe next step is to implement the tenth mathematical operation, namely absolute value. This operation will be implemented as follows:\n\n\n\nabs\n\n abs (a:int=1)\n\nAbsolute value of a number\nThe next step is to implement the eleventh mathematical operation, namely sine. This operation will be implemented as follows:\n\n\n\nsin\n\n sin (a:int=1)\n\nSin of a number"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "literate-copilot",
    "section": "",
    "text": "This is an experimentation project to see how GitHub Copilot could benefit from Literate Programming principles and workflows.\nThis project supports the writing of this blog post."
  }
]